defaults:
  app:
    provisionerIterateConfig: !env:json:optional PROVISIONER_ITERATE_CONFIG
    workerScannerIterateConfig: !env:json:optional WORKER_SCANNER_ITERATE_CONFIG
    workerPoolErrorRetentionDays: 7 # keep worker pool error stats for this many days
  monitoring:
    level: !env:optional LEVEL
    errorConfig: !env:json:secret:optional ERROR_CONFIG
    prometheusConfig: !env:json:optional PROMETHEUS_CONFIG
  taskcluster:
    rootUrl: !env TASKCLUSTER_ROOT_URL
    credentials:
      clientId: !env TASKCLUSTER_CLIENT_ID
      accessToken: !env:secret TASKCLUSTER_ACCESS_TOKEN
  postgres:
    readDbUrl: !env:secret READ_DB_URL
    writeDbUrl: !env:secret WRITE_DB_URL
    dbCryptoKeys: !env:json:secret:optional DB_CRYPTO_KEYS
  server:
    port: !env:number PORT
    env: !env NODE_ENV
    forceSSL: !env:bool FORCE_SSL
    trustProxy: !env:bool TRUST_PROXY
    # This is required to be larger than the downstream proxy timeout, default: 90s
    keepAliveTimeoutSeconds: !env:number:optional KEEP_ALIVE_TIMEOUT_SECONDS
  pulse:
    hostname: !env PULSE_HOSTNAME
    username: !env:secret PULSE_USERNAME
    password: !env:secret PULSE_PASSWORD
    vhost: !env PULSE_VHOST
    amqps: !env:bool:optional PULSE_AMQPS
  providers: !env:json:secret PROVIDERS

  # new relic config (processed in services/prelude.js)
  newRelic: !env:json:secret:optional NEW_RELIC

test:
  server:
    port: 60409
    env: 'development'
    forceSSL: false
    trustProxy: false
  taskcluster:
    rootUrl: "https://tc.example.com"
  postgres:
    dbCryptoKeys:
      - id: 'worker-manager'
        algo: 'aes-256'
        key: "aSdtIGJzdGFjayEgaGVsbG8gZnV0dXJlIHBlcnNvbgo="
  providers:
    testing1:
      providerType: testing
    testing2:
      providerType: testing
    static:
      providerType: static
    google:
      providerType: google
      project: testy
      creds: {client_id: "fake-creds"}
      workerServiceAccountId: 12345
    aws:
      providerType: aws
    azure:
      providerType: azure
      secret: 123abc
      clientId: my client
      domain: a domain
      resourceGroupName: some resources
